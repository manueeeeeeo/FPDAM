--MANUEL 1� DAM
SET SERVEROUTPUT ON;
SET VERIFY OFF;

/*Ejercicio 1 */
CREATE OR REPLACE PROCEDURE INSERTA_MEDICINA(nom MEDICINAS.NOMBRE%TYPE, dos MEDICINAS.DOSIS%TYPE, labo MEDICINAS.LABORATORIO%TYPE,
compue MEDICINAS.COMPUESTO%TYPE, tip MEDICINAS.TIPO%TYPE)
IS
    contador1 NUMBER(2):=0;
    contador2 NUMBER(2):=0;
    contador3 NUMBER(3):=0;
BEGIN
    SELECT COUNT(*) INTO contador1 FROM MEDICINAS WHERE LOWER(NOMBRE)=LOWER(nom) AND DOSIS=dos;
    SELECT COUNT (*) INTO contador3 FROM MEDICINAS WHERE LOWER(NOMBRE)=LOWER(nom);
    SELECT COUNT(*) INTO contador2 FROM MEDICINAS WHERE LOWER(NOMBRE)=LOWER(nom) AND LOWER(LABORATORIO)=LOWER(labo)
    AND LOWER(COMPUESTO)=LOWER(compue) AND LOWER(TIPO)=LOWER(tip);
        
        
    IF contador1>0 AND contador3>0 THEN
        DBMS_OUTPUT.PUT_LINE('ESE MEDICAMENTO YA EXISTE CON ESA DOSIS');
    ELSIF contador3=0 THEN
        DBMS_OUTPUT.PUT_LINE('ESE ES UN M�DICAMENTO QUE NO EXISTE EN LA BASE DE DATOS, PROCEDEMOS A INSERTARLE');
            INSERT INTO MEDICINAS VALUES((SELECT MAX(ID_MED)+1 FROM MEDICINAS), nom, dos, labo, compue, tip);
    ELSE
        DBMS_OUTPUT.PUT_LINE(CHR(10) || 'DE ACUERDO, ESE MEDICAMENTO EXISTE, PERO NO CON ESAS DOSIS');
        IF contador2>0 THEN
            DBMS_OUTPUT.PUT_LINE('PROCEDEMOS A INSERTARLE CON ESA DOSIS');
            INSERT INTO MEDICINAS VALUES((SELECT MAX(ID_MED)+1 FROM MEDICINAS), nom, dos, labo, compue, tip);
        ELSE
            DBMS_OUTPUT.PUT_LINE('LO SETIMOS! MIRA LOS CAMPOS, COMPUESTO, LABORATORIO O TIPO, PORQUE TE HAS EQUIVOCADO');
        END IF;
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;

/*INSERTAR UNO NUEVO -> Le inserta sin m�s*/
BEGIN
    INSERTA_MEDICINA('NUEVO', '90 mg', 'Bayer', 'Ibuprofeno', 'analgesicos');
END;

/*INSERTAR UNO EXISTENTE -> Nos dice que ya existe*/
BEGIN
    INSERTA_MEDICINA('NUEVO', '90 mg', 'Bayer', 'Ibuprofeno', 'analgesicos');
END;

/*INSERTAR UNO EXISTENTE CON DIFERENTE DOSIS -> Nos dice que existe pero no con esa dosis asique le inserta*/
BEGIN
    INSERTA_MEDICINA('NUEVO', '55 mg', 'Bayer', 'Ibuprofeno', 'analgesicos');
END;

/*INSERTAR UNO PERO CON ALGUN CAMPO MAL -> Nos dice que tenemos algun error en algun campo*/
BEGIN
    INSERTA_MEDICINA('NUEVO', '40 mg', 'Bayer', 'uprofeno', 'analgesicos');
END;

/*Ejercicio 2 */
CREATE OR REPLACE PROCEDURE verTursitas
IS
    CURSOR C1 IS SELECT DNI_TUT, (NOMBRE || ' ' || APELLIDO1 || ' ' || APELLIDO2) COMPLETO FROM TURISTAS ;
    REG1 C1%ROWTYPE;
    
    CURSOR C2 (dni TURISTAS.DNI_TUT%type) IS SELECT
        UNIQUE(DNI_TUT), ID_TRA, ID_ENF, ID_MED, DOSIS, NOMBRE, FECHA_INICIO, FECHA_FIN FROM
        TRATAMIENTOS JOIN MEDICINAS_POR_TRATAMIENTO USING(ID_TRA) JOIN MEDICINAS USING(ID_MED)  WHERE DNI_TUT=dni;
    REG2 C2%ROWTYPE;
    
    auxNombre VARCHAR2(100);
    auxGravedad NUMBER(2):=0;
    
    auxNum NUMBER(3):=0;
    auxTot NUMBER(3):=0;
    
    contador NUMBER(2):=0;
    contador2 NUMBER(2):=0;
BEGIN
    DBMS_OUTPUT.PUT_LINE('LISTADO DE TURISTAS CON TRATAMIENTOS M�DICOS');
    DBMS_OUTPUT.PUT_LINE('**************************************************');
    OPEN C1;
    LOOP
        FETCH C1 INTO REG1;
        EXIT WHEN C1%NOTFOUND;
        SELECT COUNT(*) INTO contador FROM RESERVAS WHERE DNI_TUT=REG1.DNI_TUT;
        SELECT COUNT(*) INTO contador2 FROM TRATAMIENTOS WHERE DNI_TUT=REG1.DNI_TUT;
        IF contador=1 AND contador2>0 THEN
            DBMS_OUTPUT.PUT_LINE('TURISTA: ' || REG1.DNI_TUT || ' - ' || REG1.COMPLETO);
            DBMS_OUTPUT.PUT_LINE('=======================================================================================');
            DBMS_OUTPUT.PUT_LINE('COMPRIMIDO        DOSIS       ENFERMEDAD                  GRAVEDAD            INTERVALO');
            OPEN C2(REG1.DNI_TUT);
            LOOP
                FETCH C2 INTO REG2;
                EXIT WHEN C2%NOTFOUND;
                SELECT NOMBRE_COMUN INTO auxNombre FROM ENFERMEDADES WHERE ID_ENF = (SELECT ID_ENF FROM TRATAMIENTOS WHERE ID_TRA = REG2.ID_TRA);
                SELECT GRAVEDAD INTO auxGravedad FROM ENFERMEDADES WHERE ID_ENF = (SELECT ID_ENF FROM TRATAMIENTOS WHERE ID_TRA = REG2.ID_TRA);
                DBMS_OUTPUT.PUT_LINE(RPAD(TO_CHAR(REG2.NOMBRE), 19, ' ') || RPAD(TO_CHAR(REG2.DOSIS), 12, ' ') ||
                RPAD(TO_CHAR(auxNombre),29,' ') || RPAD(TO_CHAR(auxGravedad), 17, ' ') || TO_CHAR(REG2.FECHA_INICIO) || '-' ||
                TO_CHAR(REG2.FECHA_FIN));
                auxNum:=auxNum+1;
                auxTot:=auxTot+1;
            END LOOP;
            DBMS_OUTPUT.PUT_LINE('SUPERVISI�N: ' || auxNum || ' Medicamentos en total');
            DBMS_OUTPUT.PUT_LINE(CHR(10));
            auxNum:=0;
            CLOSE C2;
        END IF;
        contador:=0;
    END LOOP;
    CLOSE C1;
    DBMS_OUTPUT.PUT_LINE('============================================================================');
    DBMS_OUTPUT.PUT_LINE('TOTAL DE TRATAMIENTOS: ' || auxTot);
EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('NO SE ENCUENTRA NINGUN DATO');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR: ' || SQLERRM);
END;

--BLOQUE PARA EJECUTAR EL PROCEDIMIENTO
BEGIN
    verTursitas();
END;

/*Ejercicio 3 */
CREATE TABLE AUDITA_ASTRONAUTAS(
mensaje VARCHAR2(300));

CREATE OR REPLACE TRIGGER auditarAS BEFORE INSERT OR UPDATE OR DELETE ON ASTRONAUTAS FOR EACH ROW
DECLARE
    mensaje VARCHAR2(300);
BEGIN
    IF INSERTING THEN
        mensaje:= '[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - INSERCI�N: ' || TO_CHAR(:NEW.DNI_AST) || ', ' || TO_CHAR(:NEW.NOMBRE)
        || ' ' || TO_CHAR(:NEW.APE1) || ' '|| TO_CHAR(:NEW.APE2);
        INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
    END IF;
    
    IF UPDATING THEN
        IF :NEW.NOMBRE!=:OLD.NOMBRE THEN
            mensaje:='[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - MODIFICADO: ' || TO_CHAR(:OLD.DNI_AST) || ', ' || TO_CHAR(:NEW.NOMBRE);
            INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
        ELSIF :NEW.APE1!=:OLD.APE1 THEN
            mensaje:='[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - MODIFICADO: ' || TO_CHAR(:OLD.DNI_AST) || ', ' || TO_CHAR(:NEW.APE1);
            INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
        ELSIF :NEW.APE2!=:OLD.APE2 THEN
            mensaje:='[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - MODIFICADO: ' || TO_CHAR(:OLD.DNI_AST) || ', ' || TO_CHAR(:NEW.APE2);
            INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
        ELSIF :NEW.NACIONALIDAD!=:OLD.NACIONALIDAD THEN
            mensaje:='[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - MODIFICADO: ' || TO_CHAR(:OLD.DNI_AST) || ', ' || TO_CHAR(:NEW.NACIONALIDAD);
            INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
        ELSIF :NEW.DNI_AST!=:OLD.DNI_AST THEN
            RAISE_APPLICATION_ERROR(-20234, 'MODIFICACI�N CANCELADA -> NO PUEDES MODIFICAR UN DNI');
        ELSIF :NEW.CARGO!=:OLD.CARGO THEN
            RAISE_APPLICATION_ERROR(-20568, 'MODIFICACI�N CANCELADA -> NO PUEDES MODIFICAR UN CARGO');
        END IF;
    END IF;
    IF DELETING THEN
        mensaje:='[' || TO_CHAR(SYSDATE, 'dd-mm-yy HH24:mm') ||']' || ' - BORRADO: ' || TO_CHAR(:OLD.DNI_AST) || ', ' || TO_CHAR(:OLD.NOMBRE)
        || ' ' || TO_CHAR(:OLD.APE1) || ' '|| TO_CHAR(:OLD.APE2);
        INSERT INTO AUDITA_ASTRONAUTAS VALUES(mensaje);
    END IF;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERRO: ' || SQLERRM);
END;

--HACEMOS UNA ISNERCI�N
INSERT INTO ASTRONAUTAS VALUES('93702747U', 'MANUEL', 'SANCHEZ', 'ORTEGA','ESPA�A', 'medico');

--ACTUALIZAMOS EL VALOR DEL NOMBRE
UPDATE ASTRONAUTAS SET NOMBRE = 'JOSE' WHERE DNI_AST='93702747U';

--ACTUALIZAMOS EL VALOR DE LA NACIONALIDAD
UPDATE ASTRONAUTAS SET NACIONALIDAD = 'COSTA RICA' WHERE DNI_AST='93702747U';

--INTENTO DE MODIFICACI�N DE DNI
UPDATE ASTRONAUTAS SET DNI_AST = '09876545Y' WHERE DNI_AST='93702747U';

--INTENTO DE MODIFICACI�N DE CARGO
UPDATE ASTRONAUTAS SET CARGO = 'medico' WHERE DNI-AST='93702747U';

--BORRAMOS EL ASTRONAUTA CREADO
DELETE FROM ASTRONAUTAS WHERE DNI_AST='09876545Y';
